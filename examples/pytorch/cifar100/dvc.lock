schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train --config_file cifar100.yaml
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          generate:
            name: torch_cifar100
            path: original_data
          sample:
            random_state: 0
            stratify: true
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: cifar100
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar100
                path: original_data
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0
              - 255
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar100
              path: original_data
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.ResNet18
            num_channels: 3
            num_classes: 100
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 10
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: cifar100/reports/train/default/predictions.json
      md5: aeaec96d96a661f5185062898e19fd0d
      size: 24404547
    - path: cifar100/reports/train/default/score_dict.json
      md5: f3070a3adef622cd7899e813660957a8
      size: 898
  attack:
    cmd: python -m deckard.layers.experiment attack --config_file cifar100.yaml
    deps:
    - path: cifar100/reports/train/default/predictions.json
      md5: aeaec96d96a661f5185062898e19fd0d
      size: 24404547
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 10
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar100
              path: original_data
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.attack.AttackInitializer
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                data:
                  _target_: deckard.base.data.Data
                  generate:
                    name: torch_cifar100
                    path: original_data
                  sample:
                    random_state: 0
                    stratify: true
                  sklearn_pipeline:
                    preprocessor:
                      name: sklearn.preprocessing.StandardScaler
                      with_mean: true
                      with_std: true
                initialize:
                  clip_values:
                  - 0
                  - 255
                  criterion:
                    name: torch.nn.CrossEntropyLoss
                  optimizer:
                    lr: 0.01
                    momentum: 0.9
                    name: torch.optim.SGD
                library: pytorch
              data:
                _target_: deckard.base.data.Data
                generate:
                  name: torch_cifar100
                  path: original_data
                sample:
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              init:
                _target_: deckard.base.model.ModelInitializer
                name: torch_example.ResNet18
                num_channels: 3
                num_classes: 100
              library: pytorch
              trainer:
                batch_size: 1024
                nb_epoch: 10
            name: art.attacks.evasion.HopSkipJump
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              data:
                _target_: deckard.base.data.Data
                generate:
                  name: torch_cifar100
                  path: original_data
                sample:
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              initialize:
                clip_values:
                - 0
                - 255
                criterion:
                  name: torch.nn.CrossEntropyLoss
                optimizer:
                  lr: 0.01
                  momentum: 0.9
                  name: torch.optim.SGD
              library: pytorch
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar100
                path: original_data
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            init:
              _target_: deckard.base.model.ModelInitializer
              name: torch_example.ResNet18
              num_channels: 3
              num_classes: 100
            library: pytorch
            trainer:
              batch_size: 1024
              nb_epoch: 10
        data:
          _target_: deckard.base.data.Data
          generate:
            name: torch_cifar100
            path: original_data
          sample:
            random_state: 0
            stratify: true
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: cifar100
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar100
                path: original_data
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0
              - 255
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar100
              path: original_data
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.ResNet18
            num_channels: 3
            num_classes: 100
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 10
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: cifar100/attacks/attack.pkl
      md5: 5317760d3c6f266ece07523e98517d46
      size: 123046
    - path: cifar100/reports/attack/default/adv_predictions.json
      md5: 18a846aed49541df9c48131c8f8ebc91
      size: 21453
    - path: cifar100/reports/attack/default/score_dict.json
      md5: e7b9599098942b56f82f1f66c1c53280
      size: 1166
  attacks@ResNet18:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet18
      stage=attack ++hydra.sweeper.storage=sqlite:///cifar100/reports/attack/ResNet18.db
      --config-name cifar100.yaml
    deps:
    - path: attacks.sh
      md5: d78e6d6b697480fbccfb58bd791af506
      size: 2897
    - path: cifar100/reports/attack/default/score_dict.json
      md5: 5d129878ac159ae1b3dbd9b135511973
      size: 1172
    - path: models.sh
      md5: d477bb16f5082498a19285ded1a782e5
      size: 1522
    outs:
    - path: cifar100/reports/attack/ResNet18.db
      md5: 2ba685aa1d1cd9ec621eb3a1b767a090
      size: 4087808
  attacks@ResNet34:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet34
      stage=attack ++hydra.sweeper.storage=sqlite:///cifar100/reports/attack/ResNet34.db
      --config-name cifar100.yaml
    deps:
    - path: attacks.sh
      md5: d78e6d6b697480fbccfb58bd791af506
      size: 2897
    - path: cifar100/reports/attack/default/score_dict.json
      md5: 5d129878ac159ae1b3dbd9b135511973
      size: 1172
    - path: models.sh
      md5: d477bb16f5082498a19285ded1a782e5
      size: 1522
    outs:
    - path: cifar100/reports/attack/ResNet34.db
      md5: ed1216c4d9bbfa4f0b6e343783970074
      size: 3174400
  attacks@ResNet50:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet50
      stage=attack ++hydra.sweeper.storage=sqlite:///cifar100/reports/attack/ResNet50.db
      --config-name cifar100.yaml
    deps:
    - path: attacks.sh
      md5: d78e6d6b697480fbccfb58bd791af506
      size: 2897
    - path: cifar100/reports/attack/default/score_dict.json
      md5: 5d129878ac159ae1b3dbd9b135511973
      size: 1172
    - path: models.sh
      md5: d477bb16f5082498a19285ded1a782e5
      size: 1522
    outs:
    - path: cifar100/reports/attack/ResNet50.db
      md5: 4915a611bc8eed14feb13e4e5fcf7bc1
      size: 2863104
