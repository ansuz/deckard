schema: '2.0'
stages:
  compile@attack:
    cmd: python -m deckard.layers.compile --report_folder mnist/reports/attack --results_file
      mnist/reports/attack.csv
    deps:
    - path: mnist/reports/attack/
      md5: 452a2037e67ca3c94b921ef2577c55eb.dir
      size: 21895569544
      nfiles: 53004
    - path: mnist/reports/attack/ResNet101.db
      md5: 600452804d96c8b8483c3f8da01130c4
      size: 462848
    - path: mnist/reports/attack/ResNet18.db
      md5: 920b0ed178ec504c0d7990777862283f
      size: 1363968
    - path: mnist/reports/attack/ResNet34.db
      md5: 3f56dd2ea0783a56a2a9e3eaaad88c21
      size: 1945600
    - path: mnist/reports/attack/ResNet50.db
      md5: d9ee221b942b56d9bb720e022e05bf4b
      size: 462848
    outs:
    - path: mnist/reports/attack.csv
      md5: ec29f31a3296cc148eabeb7b7ac111bd
      size: 47418362
  clean@attack:
    cmd: python -m deckard.layers.clean_data -i mnist/reports/attack.csv -o mnist/reports/clean_attack.csv
      -c conf/clean.yaml
    deps:
    - path: mnist/reports/attack.csv
      md5: ec29f31a3296cc148eabeb7b7ac111bd
      size: 47418362
    params:
      params.yaml:
        files.directory: mnist
        files.reports: reports
      conf/clean.yaml:
        attacks:
          DeepFool: Deep
          FastGradientMethod: FGM
          HopSkipJump: HSJ
          PixelAttack: Pixel
          ProjectedGradientDescent: PGD
          ThresholdAttack: Thresh
        defences:
          Control: Control
          FeatureSqueezing: FSQ
          GaussianAugmentation: Gauss-in
          GaussianNoise: Gauss-out
          HighConfidence: Conf
          nb_epoch: Epochs
          model_layers: Control
        fillna:
          Epochs: 20
        params:
          Deep: attack.init.kwargs.nb_grads
          FGM: attack.init.kwargs.eps
          HSJ: attack.init.kwargs.max_iter
          Pixel: attack.init.kwargs.th
          PGD: attack.init.kwargs.eps
          Thresh: attack.init.kwargs.th
          Gauss-out: model.art.pipeline.postprocessor.kwargs.scale
          Conf: model.art.pipeline.postprocessor.kwargs.cutoff
          FSQ: model.art.pipeline.preprocessor.kwargs.bit_depth
          Gauss-in: model.art.pipeline.preprocessor.kwargs.sigma
          Control: model_layers
          Epochs: model.trainer.kwargs.nb_epoch
          control:
            model_layers: 18
          defaults:
            model.trainer.nb_epoch: 20
          Epochs: model.trainer.kwargs.nb_epoch
          control:
            model_layers: 18
          defaults:
            model.trainer.nb_epoch: 20
    outs:
    - path: mnist/reports/clean_attack.csv
      md5: e7155777976aae7d1682d912e9ea7a22
      size: 19667810
  plot:
    cmd: python -m deckard.layers.plots --path mnist/plots/ --file mnist/reports/clean_attack.csv
      -c conf/plots.yaml
    deps:
    - path: mnist/reports/clean_attack.csv
      md5: e7155777976aae7d1682d912e9ea7a22
      size: 19667810
    params:
      params.yaml:
        files.directory: mnist
        files.reports: reports
      conf/plots.yaml:
        cat_plot:
        - file: adv_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: linear
          titles: Adv. Accuracy vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          titles: Ben. Accuracy vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: accuracy
          ylabels: Ben. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_failures_per_train_time_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          titles: $\bar{C}_{ben.}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: training_time_per_failure
          ylabels: $\bar{C}_{ben.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_train_time_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          titles: $\bar{C}_{adv.}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: training_time_per_adv_failure
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_train_time_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          set:
            yscale: log
          titles: $\bar{C}_{adv.}$ vs Attack Type
          x: atk_gen
          xlabels: Attack Type
          y: training_time_per_adv_failure
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_test_time_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          titles: $h_{adv}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: adv_failure_rate
          ylabels: $h_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_accuracy_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          titles: Adv. Accuracy vs Attack Type
          x: atk_gen
          xlabels: Attack Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_failure_rate_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          set:
            yscale: log
          titles: $h_{ben}(t; \theta)$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: failure_rate
          ylabels: $h_{ben}(t; \theta)$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        line_plot:
        - file: def_param_vs_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Ben. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: accuracy
          y_scale:
          ylabel: Ben. Accuracy
        - file: def_param_vs_adv_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Adv. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
        - file: def_param_vs_adv_failure_rate.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: $h_{adv}$ vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_failure_rate
          y_scale: log
          ylabel: $h_{adv.}$
        - file: atk_param_vs_accuracy.pdf
          hue: atk_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
          title: Adv. Accuracy vs Attack Strength
          x: atk_value
          x_scale: linear
          xlabel: Attack Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - FGM
          - PGD
          - Deep
          - HSJ
          - Pixel
          - Thresh
        scatter_plot:
        - x: train_time_per_sample
          y: adv_failure_rate
          hue: model_name
          xlabel: $t_{train}$
          ylabel: $h_{adv}$
          title: $h_{adv}$ vs $t_{train}$
          file: adv_failure_rate_vs_train_time.pdf
          y_scale: log
          x_scale: log
          legend:
            title: Model Name
            bbox_to_anchor:
            - 1.05
            - 1
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
    outs:
    - path: mnist/plots/adv_accuracy_vs_attack_type.pdf
      md5: ae86ffe81248579200a08d8bcc5e64c2
      size: 32417
    - path: mnist/plots/adv_accuracy_vs_defence_type.pdf
      md5: 2fde42679ecb0baf8c86e1c66ca580fd
      size: 28526
    - path: mnist/plots/adv_failure_rate_vs_train_time.pdf
      md5: 4de20c615e288ef26873b7c9c50cb810
      size: 93345
    - path: mnist/plots/adv_failures_per_test_time_vs_defence_type.pdf
      md5: 52b259b98a1b1367a4ca42993ff31584
      size: 40168
    - path: mnist/plots/adv_failures_per_train_time_vs_attack_type.pdf
      md5: 373354daff144f0c78ff495fad17e568
      size: 41061
    - path: mnist/plots/adv_failures_per_train_time_vs_defence_type.pdf
      md5: 352cf6e9a1a909fdab08d4e6b9984dc8
      size: 36931
    - path: mnist/plots/atk_param_vs_accuracy.pdf
      md5: 295c7c9fd40336289b3c871c467a15c1
      size: 20687
    - path: mnist/plots/ben_accuracy_vs_defence_type.pdf
      md5: dc9a737594fc182062ab737f518bdbb8
      size: 29979
    - path: mnist/plots/ben_failure_rate_vs_defence_type.pdf
      md5: 390f6bc25c2b29857a9fc65d2bb0b4a6
      size: 42308
    - path: mnist/plots/ben_failures_per_train_time_vs_defence_type.pdf
      md5: 650e19c68a146ea96f5c434ab769ac43
      size: 37418
    - path: mnist/plots/def_param_vs_accuracy.pdf
      md5: d2b1fce59dd06cff1748b5271861c457
      size: 20459
    - path: mnist/plots/def_param_vs_adv_accuracy.pdf
      md5: 14d8e80956443c75387780ee91fd2089
      size: 19510
    - path: mnist/plots/def_param_vs_adv_failure_rate.pdf
      md5: 504d05955e90a9a9e917bbbf5c985fdf
      size: 22750
  afr:
    cmd: python -m deckard.layers.afr --dataset mnist --data_file mnist/reports/clean_attack.csv  --duration_col
      adv_fit_time --dataset mnist --config_file conf/afr.yaml --plots_folder mnist/plots/
    deps:
    - path: mnist/plots/adv_accuracy_vs_defence_type.pdf
      md5: 2fde42679ecb0baf8c86e1c66ca580fd
      size: 28526
    - path: mnist/reports/clean_attack.csv
      md5: e7155777976aae7d1682d912e9ea7a22
      size: 19667810
    params:
      params.yaml:
        files.directory: mnist
      conf/afr.yaml:
        covariates:
        - accuracy
        - train_time
        - predict_time
        - atk_value
        - def_value
        - data.sample.random_state
        - model_layers
        - adv_fit_time
        - adv_failure_rate
        - model.trainer.kwargs.nb_epoch
        - adv_failure_rate
        - model.trainer.kwargs.nb_epoch
        log_logistic:
          plot:
            file: log_logistic_aft.pdf
            title: Log logistic AFR Model
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'train_time: lambda_': $t_{train}$
            'predict_proba_time: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $h_{adv.}(t;\theta)$
            'failure_rate: lambda_': $h_{ben.}(t;\theta)$
            'model.trainer.kwargs.nb_epoch: lambda_': No. of Epochs
            'model.trainer.kwargs.nb_epoch: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
          partial_effect:
          - file: log_logistic_epochs_partial_effect.pdf
            covariate_array: model.trainer.kwargs.nb_epoch
            covariate_array: model.trainer.kwargs.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Log-Logistic AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: log_logistic_layers_partial_effect.pdf
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Cox AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
        log_normal:
          plot:
            file: log_normal_aft.pdf
            title: Log Normal AFR Model
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'train_time: lambda_': $t_{train}$
            'predict_proba_time: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $h_{adv.}(t;\theta)$
            'failure_rate: lambda_': $h_{ben.}(t;\theta)$
            'model.trainer.kwargs.nb_epoch: lambda_': No. of Epochs
            'model.trainer.kwargs.nb_epoch: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
          partial_effect:
          - file: log_normal_epochs_partial_effect.pdf
            covariate_array: model.trainer.kwargs.nb_epoch
            covariate_array: model.trainer.kwargs.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Log-Normal AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: log_normal_layers_partial_effect.pdf
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Cox AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
        weibull:
          plot:
            file: weibull_aft.pdf
            title: Weibull AFR Model
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'train_time: lambda_': $t_{train}$
            'predict_proba_time: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $h_{adv.}(t;\theta)$
            'failure_rate: lambda_': $h_{ben.}(t;\theta)$
            'model.trainer.kwargs.nb_epoch: lambda_': No. of Epochs
            'model.trainer.kwargs.nb_epoch: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
          partial_effect:
          - file: weibull_epochs_partial_effect.pdf
            covariate_array: model.trainer.kwargs.nb_epoch
            covariate_array: model.trainer.kwargs.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Weibull AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: weibull_layers_partial_effect.pdf
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Weibull AFR
            title: $S(t)$ for Weibull AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
    outs:
    - path: mnist/plots/aft_comparison.csv
      md5: 0563314c51d98a3ed147d9e962f94272
      size: 353
    - path: mnist/plots/aft_comparison.tex
      md5: 05e851af0214fddfdbde8a16cc224fdb
      size: 600
    - path: mnist/plots/log_logistic_aft.pdf
      md5: 5e83bb4d8eac55ac686960752a1b692a
      size: 23774
    - path: mnist/plots/log_logistic_epochs_partial_effect.pdf
      md5: 5c622ab907d46449aae2712c6a688007
      size: 26242
    - path: mnist/plots/log_logistic_layers_partial_effect.pdf
      md5: 0ae9f1934ede322ca309f4ff665d0e98
      size: 28314
    - path: mnist/plots/log_normal_aft.pdf
      md5: e738385a6d3f6c61497d8a86f473ccde
      size: 23724
    - path: mnist/plots/log_normal_epochs_partial_effect.pdf
      md5: 5c9de9fc0fff1faa1c1eded38f360abc
      size: 27252
    - path: mnist/plots/log_normal_layers_partial_effect.pdf
      md5: 8f421062c869b4b69794e818e6f89304
      size: 28394
    - path: mnist/plots/weibull_aft.pdf
      md5: 3846cc3b534bec9b13308648d99fc471
      size: 32756
    - path: mnist/plots/weibull_epochs_partial_effect.pdf
      md5: 87f0980228beb6910c325c1ecfcbeba6
      size: 27087
    - path: mnist/plots/weibull_layers_partial_effect.pdf
      md5: 013cf6455928aae60d74a5f9fb8489a9
      size: 29503
  copy_results:
    cmd: cp -r mnist/plots/* ~/ml_afr/mnist/
    deps:
    - path: mnist/plots/
      md5: d7d0c370325ed4814c4d49915b852b58.dir
      size: 713558
      nfiles: 24
