schema: '2.0'
stages:
  clean@attack:
    cmd: python -m deckard.layers.clean_data -i mnist/reports/attack.csv -o mnist/reports/clean_attack.csv
      -c conf/clean.yaml
    deps:
    - path: mnist/reports/attack.csv
      md5: ec29f31a3296cc148eabeb7b7ac111bd
      size: 47418362
    params:
      params.yaml:
        files.directory: mnist
        files.reports: reports
      conf/clean.yaml:
        attacks:
          DeepFool: Deep
          FastGradientMethod: FGM
          HopSkipJump: HSJ
          PixelAttack: Pixel
          ProjectedGradientDescent: PGD
          ThresholdAttack: Thresh
        defences:
          Control: Control
          FeatureSqueezing: FSQ
          GaussianAugmentation: Gauss-in
          GaussianNoise: Gauss-out
          HighConfidence: Conf
          nb_epoch: Epochs
          model_layers: Control
        fillna:
          Epochs: 20
        params:
          Deep: attack.init.kwargs.nb_grads
          FGM: attack.init.kwargs.eps
          HSJ: attack.init.kwargs.max_iter
          Pixel: attack.init.kwargs.th
          PGD: attack.init.kwargs.eps
          Thresh: attack.init.kwargs.th
          Gauss-out: model.art.pipeline.postprocessor.kwargs.scale
          Conf: model.art.pipeline.postprocessor.kwargs.cutoff
          FSQ: model.art.pipeline.preprocessor.kwargs.bit_depth
          Gauss-in: model.art.pipeline.preprocessor.kwargs.sigma
          Control: model_layers
          Epochs: model.trainer.kwargs.nb_epoch
          control:
            model_layers: 18
          defaults:
            model.trainer.nb_epoch: 20
    outs:
    - path: mnist/reports/clean_attack.csv
      md5: 391e4f71cfe7aca10f2b91f1f88e7805
      size: 19657689
  plot:
    cmd: python -m deckard.layers.plots --path mnist/plots/ --file mnist/reports/clean_attack.csv
      -c conf/plots.yaml
    deps:
    - path: mnist/reports/clean_attack.csv
      md5: 391e4f71cfe7aca10f2b91f1f88e7805
      size: 19657689
    params:
      params.yaml:
        files.directory: mnist
        files.reports: reports
      conf/plots.yaml:
        cat_plot:
        - file: adv_accuracy_vs_defence_type.eps
          hue: model_name
          kind: boxen
          set:
            yscale: linear
          titles: Adv. Accuracy vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_accuracy_vs_defence_type.eps
          hue: model_name
          kind: boxen
          titles: Ben. Accuracy vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: accuracy
          ylabels: Ben. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_failures_per_train_time_vs_defence_type.eps
          hue: model_name
          kind: boxen
          set:
            yscale: log
          titles: $\bar{C}_{ben.}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: training_time_per_failure
          ylabels: $\bar{C}_{ben.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_train_time_vs_defence_type.eps
          hue: model_name
          kind: boxen
          set:
            yscale: log
          titles: $\bar{C}_{adv.}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: training_time_per_adv_failure
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_train_time_vs_attack_type.eps
          hue: model_name
          kind: boxen
          legend_title: Model Name
          set:
            yscale: log
          titles: $\bar{C}_{adv.}$ vs Attack Type
          x: atk_gen
          xlabels: Attack Type
          y: training_time_per_adv_failure
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_test_time_vs_defence_type.eps
          hue: model_name
          kind: boxen
          legend_title: Model Name
          titles: $h_{adv}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: adv_failure_rate
          ylabels: $h_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_accuracy_vs_attack_type.eps
          hue: model_name
          kind: boxen
          legend_title: Model Name
          titles: Adv. Accuracy vs Attack Type
          x: atk_gen
          xlabels: Attack Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_failure_rate_vs_defence_type.eps
          hue: model_name
          kind: boxen
          legend_title: Model Name
          set:
            yscale: log
          titles: $h_{ben}(t; \theta)$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: failure_rate
          ylabels: $h_{ben}(t; \theta)$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        line_plot:
        - file: def_param_vs_accuracy.eps
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Ben. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: accuracy
          y_scale:
          ylabel: Ben. Accuracy
          hue_order:
          - Control
          - Conf
          - Epochs
          - Gauss-in
          - Gauss-out
          - Conf
          - FSQ
          errorbar: se
          err_style: bars
        - file: def_param_vs_adv_accuracy.eps
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Adv. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - Control
          - Conf
          - Epochs
          - Gauss-in
          - Gauss-out
          - Conf
          - FSQ
          errorbar: se
          err_style: bars
        - file: def_param_vs_adv_failure_rate.eps
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: $h_{adv}$ vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_failure_rate
          y_scale: log
          ylabel: $h_{adv.}$
          hue_order:
          - Control
          - Conf
          - Epochs
          - Gauss-in
          - Gauss-out
          - Conf
          - FSQ
          errorbar: se
          err_style: bars
        - file: atk_param_vs_accuracy.eps
          hue: atk_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
          title: Adv. Accuracy vs Attack Strength
          x: atk_value
          x_scale: linear
          xlabel: Attack Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - FGM
          - PGD
          - Deep
          - HSJ
          - Pixel
          - Thresh
          errorbar: se
          err_style: bars
        scatter_plot:
        - x: train_time_per_sample
          y: adv_failure_rate
          hue: model_name
          xlabel: $t_{train}$
          ylabel: $h_{adv}$
          title: $h_{adv}$ vs $t_{train}$
          file: adv_failure_rate_vs_train_time.eps
          y_scale: log
          x_scale: log
          legend:
            title: Model Name
            bbox_to_anchor:
            - 1.05
            - 1
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
    outs:
    - path: mnist/plots/adv_accuracy_vs_attack_type.eps
      md5: 317a08cab3cb8aa0d3f8390b68811440
      size: 113600
    - path: mnist/plots/adv_accuracy_vs_defence_type.eps
      md5: 07cd5db97f9c638295ac3c423f7c392a
      size: 105721
    - path: mnist/plots/adv_failure_rate_vs_train_time.eps
      md5: 5ec0bda1d737d2d6b9afd7334d0b6285
      size: 798746
    - path: mnist/plots/adv_failures_per_test_time_vs_defence_type.eps
      md5: 755541b7a3190ffad9526ae913cd0c81
      size: 125195
    - path: mnist/plots/adv_failures_per_train_time_vs_attack_type.eps
      md5: b75824608f46be32dbe7effed23daae1
      size: 123494
    - path: mnist/plots/adv_failures_per_train_time_vs_defence_type.eps
      md5: 442ef17e85927e73cfc7a08eb9d436d4
      size: 116302
    - path: mnist/plots/atk_param_vs_accuracy.eps
      md5: 057b4585ce92d0dde8dc136253f8287b
      size: 37595
    - path: mnist/plots/ben_accuracy_vs_defence_type.eps
      md5: 8f31c4784ba41e817bb0761a38b931f9
      size: 101387
    - path: mnist/plots/ben_failure_rate_vs_defence_type.eps
      md5: dd0bccb7c6d5a685255b5564924e38ec
      size: 127104
    - path: mnist/plots/ben_failures_per_train_time_vs_defence_type.eps
      md5: fc9cfbb803bc3321c26394a02bfda39f
      size: 116879
    - path: mnist/plots/def_param_vs_accuracy.eps
      md5: 8c56ce7d489ea94cbf941c03b4da1a23
      size: 38918
    - path: mnist/plots/def_param_vs_adv_accuracy.eps
      md5: 602092484594a4a9a19a82239c193f3c
      size: 38016
    - path: mnist/plots/def_param_vs_adv_failure_rate.eps
      md5: 86d263b366b1877ee876ac615c4d433c
      size: 40619
  afr:
    cmd: python -m deckard.layers.afr --dataset mnist --data_file mnist/reports/clean_attack.csv  --duration_col
      adv_fit_time --dataset mnist --config_file conf/afr.yaml --plots_folder mnist/plots/
    deps:
    - path: mnist/plots/adv_accuracy_vs_defence_type.eps
      md5: 07cd5db97f9c638295ac3c423f7c392a
      size: 105721
    - path: mnist/reports/clean_attack.csv
      md5: 391e4f71cfe7aca10f2b91f1f88e7805
      size: 19657689
    params:
      params.yaml:
        files.directory: mnist
      conf/afr.yaml:
        covariates:
        - adv_fit_time
        - accuracy
        - train_time
        - predict_time
        - atk_value
        - def_value
        - data.sample.random_state
        - model_layers
        - model.trainer.kwargs.nb_epoch
        log_logistic:
          plot:
            file: log_logistic_aft.eps
            title: Log logistic AFR Model
          labels:
            'Intercept: beta_': $\beta$
            'Intercept: alpha_': $\alpha$
            'data.sample.random_state: alpha_': Random State
            'atk_value: alpha_': Attack Strength
            'train_time: alpha_': $t_{train}$
            'predict_proba_time: alpha_': $t_{predict}$
            'adv_accuracy: alpha_': Adv. Accuracy
            'accuracy: alpha_': Ben. Accuracy
            'adv_fit_time: alpha_': $t_{attack}$
            'adv_failure_rate: alpha_': $h_{adv.}(t;\theta)$
            'failure_rate: alpha_': $h_{ben.}(t;\theta)$
            'model.trainer.kwargs.nb_epoch: alpha_': No. of Epochs
            'model.trainer.batch_size: alpha_': Batch Size
            def_gen: Defence
            'model_layers: alpha_': ResNet Layers
            'def_value: alpha_': Defence Strength
            'predict_time: alpha_': $t_{predict}$
          partial_effect:
          - file: log_logistic_epochs_partial_effect.eps
            covariate_array: model.trainer.kwargs.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Log-Logistic AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: log_logistic_layers_partial_effect.eps
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Cox AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
        log_normal:
          plot:
            file: log_normal_aft.eps
            title: Log Normal AFR Model
          labels:
            'Intercept: sigma_': $\rho$
            'Intercept: mu_': $\mu$
            'data.sample.random_state: mu_': Random State
            'atk_value: mu_': Attack Strength
            'train_time: mu_': $t_{train}$
            'predict_proba_time: mu_': $t_{predict}$
            'adv_accuracy: mu_': Adv. Accuracy
            'accuracy: mu_': Ben. Accuracy
            'adv_fit_time: mu_': $t_{attack}$
            'adv_failure_rate: mu_': $h_{adv.}(t;\theta)$
            'failure_rate: mu_': $h_{ben.}(t;\theta)$
            'model.trainer.kwargs.nb_epoch: mu_': No. of Epochs
            'model.trainer.batch_size: mu_': Batch Size
            def_gen: Defence
            'model_layers: mu_': ResNet Layers
            'def_value: mu_': Defence Strength
            'predict_time: mu_': $t_{predict}$
          partial_effect:
          - file: log_normal_epochs_partial_effect.eps
            covariate_array: model.trainer.kwargs.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Log-Normal AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: log_normal_layers_partial_effect.eps
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Cox AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
        weibull:
          plot:
            file: weibull_aft.eps
            title: Weibull AFR Model
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'train_time: lambda_': $t_{train}$
            'predict_proba_time: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $h_{adv.}(t;\theta)$
            'failure_rate: lambda_': $h_{ben.}(t;\theta)$
            'model.trainer.kwargs.nb_epoch: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
            'model_layers: lambda_': ResNet Layers
            'def_value: lambda_': Defence Strength
            'predict_time: lambda_': $t_{predict}$
          partial_effect:
          - file: weibull_epochs_partial_effect.eps
            covariate_array: model.trainer.kwargs.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Weibull AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: weibull_layers_partial_effect.eps
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Weibull AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
    outs:
    - path: mnist/plots/aft_comparison.csv
      md5: 44d0cbf3175dadc617103edd6f8ccf48
      size: 360
    - path: mnist/plots/aft_comparison.tex
      md5: 0034975eb38ed6deb1b6f325f714571f
      size: 600
    - path: mnist/plots/log_logistic_aft.eps
      md5: e8f5bca449f316663d8092808b6d24e4
      size: 46346
    - path: mnist/plots/log_logistic_epochs_partial_effect.eps
      md5: 2c70ca9021dad25186186ad29fcbcb94
      size: 41508
    - path: mnist/plots/log_logistic_layers_partial_effect.eps
      md5: 6cb6711c3c71712cd90e04ca26dd4ec0
      size: 44506
    - path: mnist/plots/log_normal_aft.eps
      md5: 97cf44435a30408e67da5dd8aa48bdbe
      size: 48850
    - path: mnist/plots/log_normal_epochs_partial_effect.eps
      md5: 03d7e5030a5622f2943247a7f63bf798
      size: 42101
    - path: mnist/plots/log_normal_layers_partial_effect.eps
      md5: dbc5cc0d10e796a1f95c196e4422e3d1
      size: 44637
    - path: mnist/plots/weibull_aft.eps
      md5: 8da07fa3a561e4d6117a8e1ba1baf004
      size: 45762
    - path: mnist/plots/weibull_epochs_partial_effect.eps
      md5: 88cd93025e62330ee8c33cfba0a5667c
      size: 41588
    - path: mnist/plots/weibull_layers_partial_effect.eps
      md5: 7540ae46e4c3ccf5047f876e47165590
      size: 46463
  copy_results:
    cmd: mkdir -p ~/ml_afr/mnist/ && cp -r mnist/plots/* ~/ml_afr/mnist/
    deps:
    - path: mnist/plots/
      md5: 71800e43aef08c66b89898cc69e47ea5.dir
      size: 2286297
      nfiles: 24
