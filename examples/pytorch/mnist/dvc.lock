schema: '2.0'
stages:
  compile@attack:
    cmd: python -m deckard.layers.compile --report_folder mnist/reports/attack --results_file
      mnist/reports/attack.csv
    deps:
    - path: mnist/reports/attack/
      md5: 452a2037e67ca3c94b921ef2577c55eb.dir
      size: 21895569544
      nfiles: 53004
    - path: mnist/reports/attack/ResNet101.db
      md5: 600452804d96c8b8483c3f8da01130c4
      size: 462848
    - path: mnist/reports/attack/ResNet18.db
      md5: 920b0ed178ec504c0d7990777862283f
      size: 1363968
    - path: mnist/reports/attack/ResNet34.db
      md5: 3f56dd2ea0783a56a2a9e3eaaad88c21
      size: 1945600
    - path: mnist/reports/attack/ResNet50.db
      md5: d9ee221b942b56d9bb720e022e05bf4b
      size: 462848
    outs:
    - path: mnist/reports/attack.csv
      md5: ec29f31a3296cc148eabeb7b7ac111bd
      size: 47418362
  clean@attack:
    cmd: python -m deckard.layers.clean_data -i mnist/reports/attack.csv -o mnist/reports/clean_attack.csv
      -c conf/clean.yaml
    deps:
    - path: mnist/reports/attack.csv
      md5: ec29f31a3296cc148eabeb7b7ac111bd
      size: 47418362
    params:
      params.yaml:
        files.directory: mnist
        files.reports: reports
      conf/clean.yaml:
        attacks:
          DeepFool: Deep
          FastGradientMethod: FGM
          HopSkipJump: HSJ
          PixelAttack: Pixel
          ProjectedGradientDescent: PGD
          ThresholdAttack: Thresh
        defences:
          Control: Control
          FeatureSqueezing: FSQ
          GaussianAugmentation: Gauss-in
          GaussianNoise: Gauss-out
          HighConfidence: Conf
          nb_epoch: Epochs
          model_layers: Control
        fillna:
          Epochs: 20
        params:
          Deep: attack.init.kwargs.nb_grads
          FGM: attack.init.kwargs.eps
          HSJ: attack.init.kwargs.max_iter
          Pixel: attack.init.kwargs.th
          PGD: attack.init.kwargs.eps
          Thresh: attack.init.kwargs.th
          Gauss-out: model.art.pipeline.postprocessor.kwargs.scale
          Conf: model.art.pipeline.postprocessor.kwargs.cutoff
          FSQ: model.art.pipeline.preprocessor.kwargs.bit_depth
          Gauss-in: model.art.pipeline.preprocessor.kwargs.sigma
          Control: model_layers
          Epochs: model.trainer.nb_epoch
    outs:
    - path: mnist/reports/clean_attack.csv
      md5: afaf48a3155310c166d18264cc125171
      size: 19638690
  plot:
    cmd: python -m deckard.layers.plots --path mnist/plots/ --file mnist/reports/clean_attack.csv
      -c conf/plots.yaml
    deps:
    - path: mnist/reports/clean_attack.csv
      md5: afaf48a3155310c166d18264cc125171
      size: 19638690
    params:
      params.yaml:
        files.directory: mnist
        files.reports: reports
      conf/plots.yaml:
        cat_plot:
        - file: adv_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: linear
          titles: Adv. Accuracy vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          titles: Ben. Accuracy vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: accuracy
          ylabels: Ben. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_failures_per_train_time_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          titles: $\bar{C}_{ben.}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: training_time_per_failure
          ylabels: $\bar{C}_{ben.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_train_time_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          titles: $\bar{C}_{adv.}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: training_time_per_adv_failure
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_train_time_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          set:
            yscale: log
          titles: $\bar{C}_{adv.}$ vs Attack Type
          x: atk_gen
          xlabels: Attack Type
          y: training_time_per_adv_failure
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_failures_per_test_time_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          titles: $h_{adv}$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: adv_failure_rate
          ylabels: $h_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: adv_accuracy_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          titles: Adv. Accuracy vs Attack Type
          x: atk_gen
          xlabels: Attack Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        - file: ben_failure_rate_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          legend_title: Model Name
          set:
            yscale: log
          titles: $h_{ben}(t; \theta)$ vs Defence Type
          x: def_gen
          xlabels: Defence Type
          y: failure_rate
          ylabels: $h_{ben}(t; \theta)$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
        line_plot:
        - file: def_param_vs_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Ben. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: accuracy
          y_scale:
          ylabel: Ben. Accuracy
        - file: def_param_vs_adv_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Adv. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
        - file: def_param_vs_adv_failure_rate.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: $h_{adv}$ vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_failure_rate
          y_scale: log
          ylabel: $h_{adv.}$
        - file: atk_param_vs_accuracy.pdf
          hue: atk_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
          title: Adv. Accuracy vs Attack Strength
          x: atk_value
          x_scale: linear
          xlabel: Attack Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - FGM
          - PGD
          - Deep
          - HSJ
          - Pixel
          - Thresh
        scatter_plot:
        - x: train_time_per_sample
          y: adv_failure_rate
          hue: model_name
          xlabel: $t_{train}$
          ylabel: $h_{adv}$
          title: $h_{adv}$ vs $t_{train}$
          file: adv_failure_rate_vs_train_time.pdf
          y_scale: log
          x_scale: log
          legend:
            title: Model Name
            bbox_to_anchor:
            - 1.05
            - 1
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
    outs:
    - path: mnist/plots/adv_accuracy_vs_attack_type.pdf
      md5: be01372574a4c89ab5ebd79aa83c3afb
      size: 32417
    - path: mnist/plots/adv_accuracy_vs_defence_type.pdf
      md5: ee94bc1528f4c8a27fa96f80629945bb
      size: 25802
    - path: mnist/plots/adv_failure_rate_vs_train_time.pdf
      md5: ec95593696b7d7d3c7e0aaf5e07e97a3
      size: 18368
    - path: mnist/plots/adv_failures_per_test_time_vs_defence_type.pdf
      md5: b292c1a421a568a842d0aa46a9006239
      size: 37057
    - path: mnist/plots/adv_failures_per_train_time_vs_attack_type.pdf
      md5: 7c92e7e9d58a70a0919c55db35ac4b08
      size: 35959
    - path: mnist/plots/adv_failures_per_train_time_vs_defence_type.pdf
      md5: 63ff1284b144c9dc0cdc53c47b20f9d1
      size: 29632
    - path: mnist/plots/atk_param_vs_accuracy.pdf
      md5: 7f5b71ea7d5f2b62f01757c30e49a8b9
      size: 20032
    - path: mnist/plots/ben_accuracy_vs_defence_type.pdf
      md5: df0c6785c1f5e518843f0c517a6fbd1a
      size: 27085
    - path: mnist/plots/ben_failure_rate_vs_defence_type.pdf
      md5: 1c297e1f8728bf3dcece2df9f2c83404
      size: 36305
    - path: mnist/plots/ben_failures_per_train_time_vs_defence_type.pdf
      md5: 6b3cbb67dcfc33fe1c924af06021a77f
      size: 32030
    - path: mnist/plots/def_param_vs_accuracy.pdf
      md5: 1e6a2fb54f5b4a81d42b3ad185e90dba
      size: 19538
    - path: mnist/plots/def_param_vs_adv_accuracy.pdf
      md5: 1381863008471927a474064f92e8ca90
      size: 18574
    - path: mnist/plots/def_param_vs_adv_failure_rate.pdf
      md5: 3417240b181d09dc2e9fe2b1c10ee681
      size: 22128
  afr:
    cmd: python -m deckard.layers.afr --dataset mnist --data_file mnist/reports/clean_attack.csv  --duration_col
      adv_fit_time --dataset mnist --config_file conf/afr.yaml --plots_folder mnist/plots/
    deps:
    - path: mnist/plots/adv_accuracy_vs_defence_type.pdf
      md5: ee94bc1528f4c8a27fa96f80629945bb
      size: 25802
    - path: mnist/reports/clean_attack.csv
      md5: afaf48a3155310c166d18264cc125171
      size: 19638690
    params:
      params.yaml:
        files.directory: mnist
      conf/afr.yaml:
        covariates:
        - accuracy
        - train_time
        - predict_time
        - atk_value
        - def_value
        - data.sample.random_state
        - adv_failure_rate
        - model_layers
        - adv_fit_time
        - model.trainer.nb_epoch
        log_logistic:
          plot:
            file: log_logistic_aft.pdf
            title: Log logistic AFR Model
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'train_time: lambda_': $t_{train}$
            'predict_proba_time: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $h_{adv.}(t;\theta)$
            'failure_rate: lambda_': $h_{ben.}(t;\theta)$
            'model.trainer.nb_epoch: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
          partial_effect:
          - file: log_logistic_epochs_partial_effect.pdf
            covariate_array: model.trainer.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Log-Logistic AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: log_logistic_layers_partial_effect.pdf
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Cox AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
        log_normal:
          plot:
            file: log_normal_aft.pdf
            title: Log Normal AFR Model
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'train_time: lambda_': $t_{train}$
            'predict_proba_time: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $h_{adv.}(t;\theta)$
            'failure_rate: lambda_': $h_{ben.}(t;\theta)$
            'model.trainer.nb_epoch: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
          partial_effect:
          - file: log_normal_epochs_partial_effect.pdf
            covariate_array: model.trainer.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Log-Normal AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: log_normal_layers_partial_effect.pdf
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Cox AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
        weibull:
          plot:
            file: weibull_aft.pdf
            title: Weibull AFR Model
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'train_time: lambda_': $t_{train}$
            'predict_proba_time: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $h_{adv.}(t;\theta)$
            'failure_rate: lambda_': $h_{ben.}(t;\theta)$
            'model.trainer.nb_epoch: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
          partial_effect:
          - file: weibull_epochs_partial_effect.pdf
            covariate_array: model.trainer.nb_epoch
            values_array:
            - 1
            - 10
            - 25
            - 50
            title: $S(t)$ for Weibull AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: Epochs
              labels:
              - '1'
              - '10'
              - '25'
              - '50'
          - file: weibull_layers_partial_effect.pdf
            covariate_array: model_layers
            values_array:
            - 18
            - 34
            - 50
            - 101
            - 152
            title: $S(t)$ for Cox AFR
            ylabel: Expectation of $S(t)$
            xlabel: Time $T$ (seconds)
            legend_kwargs:
              title: ResNet Layers
              labels:
              - '18'
              - '34'
              - '50'
              - '101'
              - '152'
    outs:
    - path: mnist/plots/aft_comparison.csv
      md5: 6c7cecdedb373f2d55876f80d0d4b55d
      size: 352
    - path: mnist/plots/aft_comparison.tex
      md5: f2d4fe999311654b19f4dbd592c45fcc
      size: 600
    - path: mnist/plots/log_logistic_aft.pdf
      md5: 681c95e69962e94decc9c3891cb8b319
      size: 22338
    - path: mnist/plots/log_logistic_epochs_partial_effect.pdf
      md5: 23c922a3e6fd44a33157361e6fc2233a
      size: 26620
    - path: mnist/plots/log_logistic_layers_partial_effect.pdf
      md5: a9a069f2081eb7ecc52a81f645ddb541
      size: 28300
    - path: mnist/plots/log_normal_aft.pdf
      md5: e809cc27cb5c83aeea4fb0ec6b0e0327
      size: 23331
    - path: mnist/plots/log_normal_epochs_partial_effect.pdf
      md5: c062b9a682d21a65f435b1a0268a50ce
      size: 27088
    - path: mnist/plots/log_normal_layers_partial_effect.pdf
      md5: 855a578fd16a7859983b2a3da7f9d0ac
      size: 28354
    - path: mnist/plots/weibull_aft.pdf
      md5: 8d242055d53e9c611f60ae5cbc10bd14
      size: 32774
    - path: mnist/plots/weibull_epochs_partial_effect.pdf
      md5: 6fbecd0af3059042403cf7807812dc42
      size: 27102
    - path: mnist/plots/weibull_layers_partial_effect.pdf
      md5: aa7e2407cb770d1d5731528413422b2f
      size: 28378
  copy_results:
    cmd: cp -r mnist/plots/* ~/ml_afr/mnist/
    deps:
    - path: mnist/plots/
      md5: 38ee447af547e3421468c65b79da400d.dir
      size: 600164
      nfiles: 24
