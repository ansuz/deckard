_target_: deckard.base.experiment.Experiment
data:
  _target_: deckard.base.data.Data
  generate:
    n_classes: 3
    n_clusters_per_class: 1
    n_features: 20
    n_samples: 1100
    name: classification
    random_state: 0
  sample:
    random_state: 0
    stratify: true
    test_size: 1000
    train_size: 100
  sklearn_pipeline:
    preprocessor:
      name: sklearn.preprocessing.StandardScaler
      with_mean: true
      with_std: true
files:
  _target_: deckard.base.files.FileConfig
  data_dir: data
  data_file: data
  data_type: .pkl
  directory: output
  model_dir: models
  model_file: model
  model_type: .pkl
  name: default
  reports: reports
  score_dict_file: score_dict.json
  stage: train
model:
  _target_: deckard.base.model.Model
  art:
    _target_: deckard.base.model.art_pipeline.ArtPipeline
    initialize:
      nb_classes: 3
    library: sklearn
  data:
    _target_: deckard.base.data.Data
    generate:
      n_classes: 3
      n_clusters_per_class: 1
      n_features: 20
      n_samples: 1100
      name: classification
      random_state: 0
    sample:
      random_state: 0
      stratify: true
      test_size: 1000
      train_size: 100
    sklearn_pipeline:
      preprocessor:
        name: sklearn.preprocessing.StandardScaler
        with_mean: true
        with_std: true
  init:
    _target_: deckard.base.model.ModelInitializer
    k: 1
    name: gzip_classifier.GzipClassifier
  library: sklearn
scorers:
  _target_: deckard.base.scorer.ScorerDict
  accuracy:
    _target_: deckard.base.scorer.ScorerConfig
    direction: maximize
    name: sklearn.metrics.accuracy_score
  log_loss:
    _target_: deckard.base.scorer.ScorerConfig
    direction: minimize
    name: sklearn.metrics.log_loss
stage: train
