schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        files:
          _target_: deckard.base.files.FileConfig
          attack_dir: attacks
          attack_type: .pkl
          data_dir: data
          data_type: .pkl
          directory: kdd_nsl
          model_dir: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 3
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix: kdd_nsl/model/kdd_nsl/gzip_classifier/gzip/0-100.npz
            k: 1
            m: -1
            method: random
            name: gzip_classifier.GzipClassifier
          library: sklearn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: 0be534fb57a09c24b508c3b8a0a8cba7
      size: 1200
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 4ff5f25905173f444a7eceff500f71ad
      size: 415
  model_optimise:
    cmd: python -m deckard.layers.optimise +stage=train ++data.sample.random_state=0,1,2,3,4,5
      dataset=kdd_nsl data=kdd_nsl model=gzip_classifier model_name=gzip_classifier
      --multirun --config-name gzip
    deps:
    - path: output/data/data.pkl
      hash: md5
      md5: 74f759e177eed9bf0448a6f3a4e7fcb8
      size: 722702
    - path: output/model/model.pkl
      hash: md5
      md5: 850f96fd86b6e8bead7f8be14f96d803
      size: 35330
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: 1694cd630b4fb01287d0b771533ad30a
      size: 670
    params:
      params.yaml:
        dataset: kdd_nsl
        model_name: gzip_classifier
      conf/default.yaml:
        hydra:
          run:
            dir: ${files.directory}/logs/${stage}/
          sweep:
            dir: ${files.directory}/logs/${dataset}
            subdir: ${hydra.sweeper.study_name}/${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${model_name}
            storage: sqlite:///${dataset}.db
            n_jobs: 32
            n_trials: 210
            params:
              model.init.k: int(1,3,5,7,9,11)
              model.init.n: int(10, 30, 50, 100, 300, 500, 1000)
            direction: ${direction}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 32
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: n_jobs
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl.db
      hash: md5
      md5: 919969fd34c9a95520dfa3d04ca06d68
      size: 335872
  find_best_model:
    cmd: python -m deckard.layers.find_best --study_name gzip_classifier --config_folder
      conf  --config_subdir model --config_name gzip --params_file best_gzip_classifier
      --study_csv output/reports/summaries/gzip_classifier_kdd_nsl.csv --study_name
      gzip_classifier
    deps:
    - path: kdd_nsl.db
      hash: md5
      md5: 919969fd34c9a95520dfa3d04ca06d68
      size: 335872
    params:
      params.yaml:
        dataset: kdd_nsl
        model_name: gzip_classifier
      conf/default.yaml:
        hydra:
          run:
            dir: ${files.directory}/logs/${stage}/
          sweep:
            dir: ${files.directory}/logs/${dataset}
            subdir: ${hydra.sweeper.study_name}/${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${model_name}
            storage: sqlite:///${dataset}.db
            n_jobs: 32
            n_trials: 210
            params:
              model.init.k: int(1,3,5,7,9,11)
              model.init.n: int(10, 30, 50, 100, 300, 500, 1000)
            direction: ${direction}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 32
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: n_jobs
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: conf/model/best_gzip_classifier.yaml
      hash: md5
      md5: e8651990cf7a92e8d67182ccd9261314
      size: 287
  model_optimise_k:
    cmd: python -m deckard.layers.optimise  ++data.sample.random_state=0,1,2,3,4,5,6,7,8,9
      data.sample.train_size=10,100,1000,.8 dataset=kdd_nsl data=kdd_nsl model=gzip_classifier
      model_name=gzip_classifier  model.init.k=1,3,5,7,11 ++hydra.sweep.dir=kdd_nsl/logs/k/kdd_nsl/gzip_classifier
      --multirun
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: bdaec2cb69c3fda6d83d8befdfcb8884
      size: 413
    params:
      params.yaml:
        dataset: kdd_nsl
        model_name: gzip_classifier
      conf/default.yaml:
        hydra:
          run:
            dir: ${files.directory}/logs/${stage}/
          sweep:
            dir: ${files.directory}/logs/${dataset}
            subdir: ${hydra.sweeper.study_name}/${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${model_name}_${dataset}
            storage: sqlite:///${files.directory}/${dataset}.db
            n_jobs: 128
            n_trials: 200
            params:
            direction: ${direction}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 128
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: n_jobs
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/k/kdd_nsl/gzip_classifier
      hash: md5
      md5: a2520e639a84e52f1eda691c5188d481.dir
      size: 2686195
      nfiles: 801
  find_best_k:
    cmd: python -m deckard.layers.find_best --study_name gzip_classifier --config_folder
      conf  --config_subdir model  --params_file best_k_gzip_classifier --study_csv
      kdd_nsl/reports/summaries/gzip_classifier_kdd_nsl.csv --study_name gzip_classifier_kdd_nsl
    deps:
    - path: kdd_nsl/logs/k/kdd_nsl/gzip_classifier
      hash: md5
      md5: a2520e639a84e52f1eda691c5188d481.dir
      size: 2686195
      nfiles: 801
    params:
      params.yaml:
        dataset: kdd_nsl
        model_name: gzip_classifier
      conf/default.yaml:
        hydra:
          run:
            dir: ${files.directory}/logs/${stage}/
          sweep:
            dir: ${files.directory}/logs/${dataset}
            subdir: ${hydra.sweeper.study_name}/${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${model_name}_${dataset}
            storage: sqlite:///${files.directory}/${dataset}.db
            n_jobs: 128
            n_trials: 200
            params:
            direction: ${direction}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 128
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: n_jobs
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: conf/model/best_k_gzip_classifier.yaml
      hash: md5
      md5: 8b3d3e36d8039367a1ecf50d60223c7e
      size: 488
  model_optimise_m:
    cmd: python -m deckard.layers.optimise  ++data.sample.random_state=0,1,2,3,4,5,6,7,8,9
      data.sample.train_size=10,100,1000,.8 dataset=truthseeker data=truthseeker model=best_k_gzip_classifier.yaml
      model_name=gzip_classifier model.init.m=10,20,50,100,200,500,1000  model.init.method="random","svc","medoid","sum"
      ++hydra.sweep.dir=output/logs/m/truthseeker/gzip_classifier --multirun
    deps:
    - path: output/data/data.pkl
      hash: md5
      md5: 94a9367cee9b99b18caed3377f1ac3be
      size: 1092988
    - path: output/model/model.pkl
      hash: md5
      md5: 8412613981221f3cd313db3a177b1612
      size: 1024911
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: 4c9d93b43a9eb3d2bc1595d3bce14f1a
      size: 419
    params:
      params.yaml:
        dataset: truthseeker
        model_name: gzip_classifier
      conf/default.yaml:
        hydra:
          run:
            dir: ${files.directory}/logs/${stage}/
          sweep:
            dir: ${files.directory}/logs/${dataset}
            subdir: ${hydra.sweeper.study_name}/${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${model_name}
            storage: sqlite:///${files.directory}/${dataset}.db
            n_jobs: 128
            n_trials: 1000
            params:
            direction: ${direction}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 128
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: n_jobs
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/logs/m/truthseeker/gzip_classifier
      hash: md5
      md5: 7994e9ddc3fdda0906a0068a61e055e0.dir
      size: 12537244
      nfiles: 4001
    - path: output/truthseeker.db
      hash: md5
      md5: c99c88e985590a28dc6a3ae580f3eaa2
      size: 1097728
  find_best_m:
    cmd: python -m deckard.layers.find_best --study_name gzip_classifier --config_folder
      conf  --config_subdir model  --params_file best_m_gzip_classifier --study_csv
      output/reports/summaries/gzip_classifier_truthseeker.csv --study_name gzip_classifier
    deps:
    - path: output/truthseeker.db
      hash: md5
      md5: c99c88e985590a28dc6a3ae580f3eaa2
      size: 1097728
    params:
      params.yaml:
        dataset: truthseeker
        model_name: gzip_classifier
      conf/default.yaml:
        hydra:
          run:
            dir: ${files.directory}/logs/${stage}/
          sweep:
            dir: ${files.directory}/logs/${dataset}
            subdir: ${hydra.sweeper.study_name}/${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${model_name}
            storage: sqlite:///${files.directory}/${dataset}.db
            n_jobs: 128
            n_trials: 1000
            params:
            direction: ${direction}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 128
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: n_jobs
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: conf/model/best_m_gzip_classifier.yaml
      hash: md5
      md5: f3f51702c8c333571c509f593fdeec16
      size: 487
